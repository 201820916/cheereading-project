"""
Django settings for cheereading project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3r-ary4or_!rp%7c7ywz86@(0fj9$tyw02q-f(85(c!$8g^as7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['cheereading-project-1.onrender.com', '127.0.0.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    # ▼▼▼ [수정] 'users' -> 'users.apps.UsersConfig'로 변경 ▼▼▼
    'users.apps.UsersConfig', 
    'books.apps.BooksConfig',
    'plans.apps.PlansConfig',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cheereading.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        
        # ✅ [수정] DIRS 리스트를 아래와 같이 수정합니다.
        # 프로젝트 최상위 templates 폴더를 기본 경로로 지정합니다.
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        
        # APP_DIRS는 각 앱 내부의 templates 폴더를 자동으로 찾게 해줍니다.
        'APP_DIRS': True,
        
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cheereading.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# settings.py

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # 사용할 엔진 지정
        'NAME': 'cheereading',             # 데이터베이스 이름
        'USER': 'root',               # DB 접속 계정
        'PASSWORD': 'tjdgns03@',           # DB 접속 비밀번호
        'HOST': 'localhost',                 # DB 서버 주소 (로컬이면 localhost 또는 127.0.0.1)
        'PORT': '3306',                      # DB 포트 번호 (MariaDB/MySQL 기본값은 3306)
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'" # MySQL 엄격 모드 설정 (권장)
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

LOGIN_REDIRECT_URL = '/users/profile/'

LOGIN_URL = '/users/login/'

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

LOGOUT_REDIRECT_URL = '/users/login/'


print("Calculated BASE_DIR is:", BASE_DIR)
print("Django is looking for templates in:", BASE_DIR / 'templates')


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'kkupsh2@gmail.com'  # 실제 Gmail 주소
EMAIL_HOST_PASSWORD = 'ctvj ppxm jowj mzxk'     # Gmail 앱 비밀번호
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SITE_ID = 1


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
